---
import MainLayout from "../../layouts/MainLayout.astro";
import { useTranslations, isValidLang } from "../../i18n/utils";
import { languages } from "../../i18n/ui";

export function getStaticPaths() {
  return Object.keys(languages).map((lang) => ({ params: { lang } }));
}

const { lang } = Astro.params;
if (!isValidLang(lang)) {
  throw new Error(`Invalid language: ${lang}`);
}
const t = useTranslations(lang);

const contactMethods = [
  {
    title: "Email",
    description: t("contact.email.description"),
    value: "contact@herodeveloper.com",
    icon: "M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z",
    link: "mailto:contact@herodeveloper.com",
  },
];
---

<MainLayout title={t("contact.title")} lang={lang}>
  <!-- reCAPTCHA v3 Script -->
  <script
    src="https://www.google.com/recaptcha/api.js?render=6Lf1bJ8qAAAAAEAhE67MxN9C-KAc23WZsoLqWwjE"
  ></script>
  <!-- EmailJS Script -->
  <script
    src="https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js"
  ></script>

  <!-- Hero Section -->
  <section class="relative custom-gradient text-white py-20">
    <div class="container mx-auto px-4">
      <h1 class="text-4xl md:text-5xl font-bold mb-4">{t("contact.title")}</h1>
      <p class="text-xl text-blue-100">{t("contact.subtitle")}</p>
    </div>
  </section>

  <!-- Contact Section -->
  <section class="py-16 px-4">
    <div class="container mx-auto max-w-6xl">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
        <!-- Contact Form -->
        <div class="bg-white rounded-2xl shadow-lg p-8">
          <h2 class="text-2xl font-bold mb-6">{t("contact.form.title")}</h2>
          <form class="space-y-6" id="contactForm">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label
                  for="name"
                  class="block text-sm font-medium text-gray-700 mb-1"
                  >{t("contact.form.name")}</label
                >
                <input
                  type="text"
                  id="name"
                  name="name"
                  required
                  class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  placeholder={t("contact.form.name")}
                />
              </div>
              <div>
                <label
                  for="email"
                  class="block text-sm font-medium text-gray-700 mb-1"
                  >{t("contact.form.email")}</label
                >
                <input
                  type="email"
                  id="email"
                  name="email"
                  required
                  class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  placeholder="your@email.com"
                />
              </div>
            </div>
            <div>
              <label
                for="message"
                class="block text-sm font-medium text-gray-700 mb-1"
                >{t("contact.form.message")}</label
              >
              <textarea
                id="message"
                name="message"
                required
                rows="6"
                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder={t("contact.form.message_placeholder")}></textarea>
            </div>

            <button
              type="submit"
              id="submitButton"
              class="w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-semibold hover:bg-blue-700 transition-colors duration-300"
            >
              {t("contact.form.submit")}
            </button>

            <!-- Form Status Messages -->
            <div id="formStatus" class="hidden mt-4 p-4 rounded-lg">
              <p id="formMessage" class="text-center"></p>
            </div>
          </form>
        </div>

        <!-- Contact Information -->
        <div class="space-y-8">
          <div>
            <h2 class="text-2xl font-bold mb-6">{t("contact.info.title")}</h2>
            <p class="text-gray-600 mb-8">
              {t("contact.info.description")}
            </p>
          </div>

          <div class="space-y-6">
            {
              contactMethods.map((method) => (
                <a
                  href={method.link}
                  class="flex items-start p-6 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors duration-300"
                >
                  <div class="text-blue-500 mr-4">
                    <svg
                      class="w-6 h-6"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d={method.icon}
                      />
                    </svg>
                  </div>
                  <div>
                    <h3 class="font-semibold text-gray-900">{method.title}</h3>
                    <p class="text-sm text-gray-500 mb-1">
                      {method.description}
                    </p>
                    <p class="text-blue-600">{method.value}</p>
                  </div>
                </a>
              ))
            }
          </div>

          <!-- Availability Info -->
          <div class="bg-blue-50 p-6 rounded-xl">
            <h3 class="font-semibold text-gray-900 mb-2">
              {t("contact.availability.title")}
            </h3>
            <p class="text-gray-600">
              {t("contact.availability.description")}
            </p>
          </div>
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<script>
  import { sendEmail } from "../../services/email";

  const form = document.getElementById("contactForm") as HTMLFormElement;
  const formStatus = document.getElementById("formStatus");
  const formMessage = document.getElementById("formMessage");
  const submitButton = document.getElementById(
    "submitButton"
  ) as HTMLButtonElement;

  function showMessage(message: string, isError: boolean = false) {
    if (formStatus && formMessage) {
      formStatus.className = `mt-4 p-4 rounded-lg ${isError ? "bg-red-100" : "bg-green-100"}`;
      formMessage.className = `text-center ${isError ? "text-red-700" : "text-green-700"}`;
      formMessage.textContent = message;
      formStatus.classList.remove("hidden");
    }
  }

  if (form) {
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      if (submitButton) {
        submitButton.disabled = true;
      }

      try {
        const formData = new FormData(form as HTMLFormElement);
        const data = {
          name: formData.get("name") as string,
          email: formData.get("email") as string,
          message: formData.get("message") as string,
          token: "",
        };

        const result = await sendEmail(data);
        if (result.success) {
          showMessage("Message sent successfully!");
          form.reset();
        } else {
          showMessage(result.error || "Error sending message", true);
        }
      } catch (error) {
        showMessage("An error occurred while sending the message.", true);
      } finally {
        if (submitButton) {
          submitButton.disabled = false;
        }
      }
    });
  }
</script>
